<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qing.Dao.TaskRunMapper">



    <!--添加-->
    <insert id="addTaskRun" parameterType="TaskRun">
        insert into xin_02.task_run(runID, runTaskName, runHeadName, runHeadID, runHeadTel, runTime,runSite,runCommitment,taskNumber)
        values (#{runID},#{runTaskName},#{runHeadName},#{runHeadID},#{runHeadTel},#{runTime},#{runSite},#{runCommitment},#{taskNumber})
    </insert>

    <!--查询所有-->
    <select id="queryAllTaskRun" resultType="TaskRun">
        select  * from  xin_02.task_run
    </select>
    <!--特定查询通过runID-->
    <select id="queryTaskRunByRunId" resultType="TaskRun">
        select  * from  xin_02.task_run where runID=#{runID}
    </select>
    <!--查询通过负责人姓名-->
    <select id="queryTaskRunByTaskName" resultType="TaskRun">
        select  * from  xin_02.task_run  where runTaskName=#{runTaskName}
    </select>
    <!--查询通过进行项目负责人的ID-->
    <select id="queryTaskRunByHeadId" resultType="TaskRun">
        select  * from  xin_02.task_run  where runHeadID=#{runHeadID}
    </select>

    <!--更改-->
   <update id="updateTaskRun" parameterType="TaskRun">
       update xin_02.task_run set runTaskName=#{runTaskName},runHeadName=#{runHeadName},runHeadID=#{runHeadID}, runHeadTel=#{runHeadTel},runTime=#{runTime},runSite=#{runSite},runCommitment=#{runCommitment},taskNumber=#{taskNumber} where runID=#{runID}
   </update>
   <!--删除-->
    <delete id="deleteTaskRunById" parameterType="int" >
        delete from xin_02.task_run where runID=#{runID}
    </delete>










</mapper>
        <!--
                 一对多

                 <select id="getstudent" resultMap="StudentTeacher">
                    select  * from student
                 </select>
                 <resultMap id="studentTeacher" type="Student">
                   <result property="id" column="id" />
                   <result property="name" column="name"/>
                复杂的属性，我们需要单独处理对象: association集合: collection
               <association property="teacher" column="tid" javaType="Teacher" select="getTeacher" />
             </resultMap>
             <select id="getTeacher" resultType="Teacher">
                 select* from teacher where id = #{tid}
             </select>
            -->



        <!--
                     按照结果嵌套处理
<select id="getStudent2" resultMap="StudentTeacher2">
select s.id sid,s.name sname,t.name tname
from student s,teacher t
where s.tid = t.id;
< / select>
<resultMap id="StudentTeacher2" type="Student">
    <result property="id" column="sid" />
    <result property="name" tolumn=" sname" / >
    <association property="teacher" javaType="Teacher">
        <result property="name" column="tname" / >
        < / association>
    </resu1tMap>

    -->